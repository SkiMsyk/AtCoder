# 3 つの整数 A,B,C が与えられます。以下の 2 種類の操作を好きな順で繰り返して 
# A,B,C をすべて等しくするために必要な操作の最小回数を求めてください。

# A,B,C のうち 2 つを選んで、その両方を 1 増やす
# A,B,C のうち 1 つを選んで、その整数を 2 増やす
# なお、これらの操作を繰り返して A,B,C をすべて等しくできることは証明できます。

# 制約
# 0≤A,B,C≤50
# 入力はすべて整数である

# 方針

# 増やすしかないので，マックスの値に寄せる必要がある
# それぞれの差分を計算する
# 2で合わせるか，11で合わせるかの２通り
# -2, 0, 0  or -1, -1, 0
# -2, -1, 0 の時は -1, 0, 0 -> 1, 0, 0 -> 1, 1, 1 の３回
# 一つだけ２縮めて，次にもう一方を縮める操作は，二つを1ずつ縮める操作を２回やるのと同等
# 最大値との差分を取った時に，近い方を-1まで近づける．
# その際にもう一方の差が偶数であれば-2まで+2の操作で持っていき あと3回
# 奇数であれば-1まで+2の操作で持っていけるので-1との差に対して2で割った整数商 + 1が答え

a = list(map(int, input().split()))
ds = [abs(e - max(a)) for e in a if e-max(a) != 0]

if len(ds) == 1:
    if ds[0] % 2 == 0:
        res = ds[0] // 2
    else:
        res = (ds[0]-1) // 2 + 2
elif len(ds) > 1:
    base = min(ds) - 1
    rem = max(ds) - base
    if rem == 1:
        res = base + 1
    elif rem % 2 == 0:
        res = base + (rem - 2) // 2 + 3
    elif rem % 2 != 0:
        res = base + (rem - 1) // 2 + 1
else:
    res = 0

print(res)