# N の数列 a={a1,a2,a3,…,aN} が与えられる
# 具体的には, 以下の操作をできるだけ多くの回数繰り返そうと思った.
# 1≤i≤N を満たす全ての i に対して, それぞれ「ai の値を 2 で割る」「ai の値を 3 倍する」のどちらかを行う.  
# ただし, 全ての i に対して 3 倍することはできず, 操作後の ai の値は整数でなければならない.  
# 最大で何回の操作が可能か, 求めなさい.
# 
# condition
# n is 1 <= n <= 10,000 and integer
# ai is 1 <= ai <= 1,000,000,000 and integer

# 方針
# 偶数でなければ ai は3倍される
# 全てが偶数になると終わり
# 2で割るという操作のみ続けて行えない
# 3をかけても偶数にならないので2で割るという操作回数を増やすことはできない
# 偶数が一つ以上有る限り，偶数を一つだけ選んで奇数になるまで割り続け，他の偶数を選べば良い
# 2進数に変換した時に右から連続する0の数だけ2で割れるので，右から数えて最初に1が出てくる位置を判定して
# 2進数の桁数から引けば右から連続する0の数がわかる
# あとはそれを足し上げれば良い


n = int(input())
a = list(map(int, input().split()))

res = 0
for e in a:
    if e % 2 == 0 :
        ebin = bin(e)
        res += len(ebin) - (ebin.rfind('1')+1)

print(res)